// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "."
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime @map("expires_at")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime @map("expires_at")

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified_at")
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  userProjects UserProjectEntity[]

  @@map("users")
}

model ProjectEntity {
  id              String   @id @default(cuid())
  title           String   @default("") @map("title")
  workspaceJson   Json     @default("{}") @map("workspace_json")
  status          Int      @map("status")
  statusUpdatedAt DateTime @default(now()) @map("status_updated_at") @db.Timestamptz()
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  userProjects  UserProjectEntity[]
  projectAssets ProjectAssetEntity[]

  @@map("projects")
}

model UserProjectEntity {
  userId    String        @map("user_id")
  projectId String        @map("project_id")
  user      User          @relation(fields: [userId], references: [id])
  project   ProjectEntity @relation(fields: [projectId], references: [id])

  @@id([userId, projectId])
  @@map("user_projects")
}

model ProjectAssetEntity {
  id        String   @id @default(cuid())
  projectId String   @map("project_id")
  fileName  String   @map("file_name")
  filePath  String   @map("file_path")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  project ProjectEntity @relation(fields: [projectId], references: [id])

  @@map("project_assets")
}
